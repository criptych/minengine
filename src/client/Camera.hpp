////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __CAMERA_HPP__
#define __CAMERA_HPP__ 1

////////////////////////////////////////////////////////////////////////////////

#include <glm/glm.hpp>

////////////////////////////////////////////////////////////////////////////////

class Camera {
    float mFOV;
    float mAspect;
    float mZNear;
    float mZFar;

    mutable glm::mat4 mTransform;
    mutable bool mNeedsUpdate;

public:
    Camera();
    Camera(float fov, float aspect, float zNear, float zFar);
    ~Camera();

    void setFOV(float fov);
    float getFOV() const;

    void setAspect(float aspect);
    float getAspect() const;

    void setZNear(float zNear);
    float getZNear() const;
    void setZFar(float zFar);
    float getZFar() const;
    void setZRange(float zNear, float zFar);

    const glm::mat4 &getTransform() const;

    void render() const;
};

////////////////////////////////////////////////////////////////////////////////

#endif // __CAMERA_HPP__

////////////////////////////////////////////////////////////////////////////////
//  EOF
////////////////////////////////////////////////////////////////////////////////

